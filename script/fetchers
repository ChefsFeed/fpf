#!/usr/bin/env ruby

require './lib/fpf/config'

def launch(port)
  log_level = ENV.fetch('FPF_PHANTOM_LOG_LEVEL', 'DEBUG')
  log_file = "log/webdriver_#{port}.log"

  cmd =  "phantomjs"
  #BIG FIXME: --webdriver seems to ignore the bind address and just binds to 0.0.0.0,
  #thus in production we're exposing the ports. We SHOULD NOT do that; need to fix this
  cmd += " --webdriver=127.0.0.1:#{port}"
  cmd += " --webdriver-logfile=#{log_file}" 
  cmd += " --webdriver-loglevel=#{log_level}"
  cmd += " --load-images=false"
  cmd += " --disk-cache=true"
  cmd += " --local-storage-path=tmp/phantom_cache"

  log "Launching phantomjs on port #{port}"
  fork do 
    Process.exec(*cmd.split, out: "/dev/null")
  end
end

def shutdown(signal = :QUIT)
  $shutdown = true
  $browsers.values.each do |wpid| 
    Process.kill(signal, wpid)
  end
end

def save_child
  current_pid = Process.wait
  if port = $browsers.rassoc(current_pid)
    $browsers[port] = launch(port)
  end
end

def port_open?(port)
  system "nc -z localhost #{port}"
end 

def log(message)
  STDERR.puts message
end

Signal.trap(:INT)  { shutdown(signal) }
Signal.trap(:QUIT) { shutdown(signal) }
Signal.trap(:CLD)  { save_child unless $shutdown }

$shutdown = false
$browsers = {}

FullPageFetcher::Config.fetchers_ports.each do |port| 
  if port_open?(port)
    log "ERROR: port #{port} already open; previous Phantom instance open? Aborting"
    shutdown
    break 
  end
  $browsers[port] = launch(port)
end

Process.waitall

